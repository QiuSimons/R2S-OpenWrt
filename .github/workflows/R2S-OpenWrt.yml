name: R2S-OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R linlinsanly:linlinsanly /home/linlinsanly/work/R2S-R4S-X86-OpenWrt
        cp -r ./SCRIPTS/R2S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
    - name: Prepare Package
      run: |
        cd openwrt
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
        /bin/bash 02_target_only.sh
    - name: Convert Translation
      run: |
        cd openwrt
        /bin/bash 03_convert_translation.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../SEED/R2S/config.seed .config
        make defconfig
    - name: Smart chmod
      run: |
        MY_Filter=$(mktemp)
        echo '/\.git' >  ${MY_Filter}
        echo '/\.svn' >> ${MY_Filter}
        find ./ -maxdepth 1 | grep -v '\./$' | grep -v '/\.git' | xargs -s1024 chmod -R u=rwX,og=rX
        find ./ -type f | grep -v -f ${MY_Filter} | xargs -s1024 file | grep 'executable\|ELF' | cut -d ':' -f1 | xargs -s1024 chmod 755
        rm -f ${MY_Filter}
        unset MY_Filter
    - name: Make Download
      run: |
        df -h
        cd openwrt
        make download -j10
    - name: Make Toolchain
      run: |
        df -h
        cd openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s
    - name: Compile Openwrt
      id: compileopenwrt
      continue-on-error: true
      run: |
        df -h
        cd openwrt
        let Make_Process=$(nproc)+1
        make -j${Make_Process} V=w
        echo $?
    - name: If Error
      if: steps.compileopenwrt.outcome == 'failure'
      run: |
        cat openwrt/.config
        echo '================================================================'
        cd openwrt && make -j1 V=s
    - name: Cleaning
      run: |
        df -h
        cd openwrt/bin/targets/rockchip/armv8
        /bin/bash ../../../../../SCRIPTS/06_cleaning.sh
    - name: Print Disk Space After
      run: df -h
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        cp openwrt/bin/targets/rockchip/armv8/*squashfs-sysupgrade.img.gz ./artifact/
        cd openwrt
        cd ..
        zip -r artifact.zip ./artifact/
        release_tag="R2S-clash-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"
    - name: Upload Artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM
        path: ./artifact.zip
    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1.8.0
      with:
        name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM
        allowUpdates: true
        tag: ${{ steps.assemble_artifact.outputs.release_tag }}
        commit: master
        replacesArtifacts: true
        draft: false
        prerelease: false
        token: ${{ secrets.workflow_token }}
        artifacts: ./artifact/*.gz,./artifact/*.seed,./artifact/*.sha256sum
